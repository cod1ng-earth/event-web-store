// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim.proto

package pim

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PimMessages struct {
	// Types that are valid to be assigned to PimMessage:
	//	*PimMessages_Product
	PimMessage           isPimMessages_PimMessage `protobuf_oneof:"pimMessage"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PimMessages) Reset()         { *m = PimMessages{} }
func (m *PimMessages) String() string { return proto.CompactTextString(m) }
func (*PimMessages) ProtoMessage()    {}
func (*PimMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_pim_200c0a20d5a7b78c, []int{0}
}
func (m *PimMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimMessages.Unmarshal(m, b)
}
func (m *PimMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimMessages.Marshal(b, m, deterministic)
}
func (dst *PimMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimMessages.Merge(dst, src)
}
func (m *PimMessages) XXX_Size() int {
	return xxx_messageInfo_PimMessages.Size(m)
}
func (m *PimMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_PimMessages.DiscardUnknown(m)
}

var xxx_messageInfo_PimMessages proto.InternalMessageInfo

type isPimMessages_PimMessage interface {
	isPimMessages_PimMessage()
}

type PimMessages_Product struct {
	Product *Product `protobuf:"bytes,1,opt,name=product,proto3,oneof"`
}

func (*PimMessages_Product) isPimMessages_PimMessage() {}

func (m *PimMessages) GetPimMessage() isPimMessages_PimMessage {
	if m != nil {
		return m.PimMessage
	}
	return nil
}

func (m *PimMessages) GetProduct() *Product {
	if x, ok := m.GetPimMessage().(*PimMessages_Product); ok {
		return x.Product
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PimMessages) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PimMessages_OneofMarshaler, _PimMessages_OneofUnmarshaler, _PimMessages_OneofSizer, []interface{}{
		(*PimMessages_Product)(nil),
	}
}

func _PimMessages_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PimMessages)
	// pimMessage
	switch x := m.PimMessage.(type) {
	case *PimMessages_Product:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Product); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PimMessages.PimMessage has unexpected type %T", x)
	}
	return nil
}

func _PimMessages_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PimMessages)
	switch tag {
	case 1: // pimMessage.product
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Product)
		err := b.DecodeMessage(msg)
		m.PimMessage = &PimMessages_Product{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PimMessages_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PimMessages)
	// pimMessage
	switch x := m.PimMessage.(type) {
	case *PimMessages_Product:
		s := proto.Size(x.Product)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Product struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price                int64    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Longtext             string   `protobuf:"bytes,5,opt,name=longtext,proto3" json:"longtext,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	SmallImageURL        string   `protobuf:"bytes,7,opt,name=smallImageURL,proto3" json:"smallImageURL,omitempty"`
	LargeImageURL        string   `protobuf:"bytes,8,opt,name=largeImageURL,proto3" json:"largeImageURL,omitempty"`
	Disabled             bool     `protobuf:"varint,9,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Tax                  int64    `protobuf:"varint,10,opt,name=tax,proto3" json:"tax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_pim_200c0a20d5a7b78c, []int{1}
}
func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (dst *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(dst, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetLongtext() string {
	if m != nil {
		return m.Longtext
	}
	return ""
}

func (m *Product) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Product) GetSmallImageURL() string {
	if m != nil {
		return m.SmallImageURL
	}
	return ""
}

func (m *Product) GetLargeImageURL() string {
	if m != nil {
		return m.LargeImageURL
	}
	return ""
}

func (m *Product) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Product) GetTax() int64 {
	if m != nil {
		return m.Tax
	}
	return 0
}

func init() {
	proto.RegisterType((*PimMessages)(nil), "pim.PimMessages")
	proto.RegisterType((*Product)(nil), "pim.Product")
}

func init() { proto.RegisterFile("pim.proto", fileDescriptor_pim_200c0a20d5a7b78c) }

var fileDescriptor_pim_200c0a20d5a7b78c = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x6d, 0xbb, 0xad, 0xed, 0xe9, 0x14, 0x39, 0x78, 0x11, 0xbc, 0x2a, 0xc3, 0x8b, 0x5e,
	0xed, 0x42, 0xdf, 0x40, 0x10, 0x14, 0x14, 0x46, 0xc1, 0x07, 0xc8, 0x9a, 0x43, 0x09, 0x24, 0x4d,
	0x48, 0x22, 0xcc, 0x27, 0xf1, 0x75, 0x25, 0xa9, 0x2b, 0xee, 0xee, 0xfc, 0xff, 0xf7, 0xfd, 0x94,
	0x06, 0x6a, 0x2b, 0xf5, 0xde, 0x3a, 0x13, 0x0c, 0x16, 0x56, 0xea, 0xdd, 0x0b, 0x34, 0x07, 0xa9,
	0x3f, 0xc8, 0x7b, 0x3e, 0x92, 0xc7, 0x0e, 0x4a, 0xeb, 0x8c, 0xf8, 0x1a, 0x02, 0xcb, 0xda, 0xac,
	0x6b, 0x1e, 0xb7, 0xfb, 0x38, 0x38, 0xcc, 0xdd, 0xeb, 0x55, 0x7f, 0xc6, 0xcf, 0x5b, 0x00, 0xbb,
	0x0c, 0x77, 0x3f, 0x39, 0x94, 0x7f, 0x12, 0xde, 0x40, 0x2e, 0x45, 0x9a, 0xd7, 0x7d, 0x2e, 0x05,
	0xde, 0xc1, 0xda, 0x3a, 0x39, 0x10, 0xcb, 0xdb, 0xac, 0x2b, 0xfa, 0x39, 0x20, 0xc2, 0x6a, 0xe2,
	0x9a, 0x58, 0x91, 0xbc, 0x74, 0x63, 0x0b, 0x8d, 0x20, 0x3f, 0x38, 0x69, 0x83, 0x34, 0x13, 0x5b,
	0x25, 0xf4, 0xbf, 0xc2, 0x7b, 0xa8, 0x94, 0x99, 0xc6, 0x40, 0xa7, 0xc0, 0xd6, 0x09, 0x2f, 0x39,
	0xb2, 0x81, 0x07, 0x1a, 0x8d, 0xfb, 0x66, 0x9b, 0x99, 0x9d, 0x33, 0x3e, 0xc0, 0xb5, 0xd7, 0x5c,
	0xa9, 0x37, 0xcd, 0x47, 0xfa, 0xec, 0xdf, 0x59, 0x99, 0x84, 0xcb, 0x32, 0x5a, 0x8a, 0xbb, 0x91,
	0x16, 0xab, 0x9a, 0xad, 0x8b, 0x32, 0x7e, 0x47, 0x48, 0xcf, 0x8f, 0x8a, 0x04, 0xab, 0xdb, 0xac,
	0xab, 0xfa, 0x25, 0xe3, 0x2d, 0x14, 0x81, 0x9f, 0x18, 0xa4, 0x3f, 0x8d, 0xe7, 0x71, 0x93, 0x1e,
	0xfb, 0xe9, 0x37, 0x00, 0x00, 0xff, 0xff, 0x97, 0x4c, 0x55, 0x31, 0x79, 0x01, 0x00, 0x00,
}
