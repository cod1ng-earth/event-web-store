// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topic.proto

package checkout

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TopicMessage struct {
	// Types that are valid to be assigned to Messages:
	//	*TopicMessage_OrderCreated
	Messages             isTopicMessage_Messages `protobuf_oneof:"messages"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TopicMessage) Reset()         { *m = TopicMessage{} }
func (m *TopicMessage) String() string { return proto.CompactTextString(m) }
func (*TopicMessage) ProtoMessage()    {}
func (*TopicMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_c81123ad544d5f66, []int{0}
}
func (m *TopicMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicMessage.Unmarshal(m, b)
}
func (m *TopicMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicMessage.Marshal(b, m, deterministic)
}
func (dst *TopicMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicMessage.Merge(dst, src)
}
func (m *TopicMessage) XXX_Size() int {
	return xxx_messageInfo_TopicMessage.Size(m)
}
func (m *TopicMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TopicMessage proto.InternalMessageInfo

type isTopicMessage_Messages interface {
	isTopicMessage_Messages()
}

type TopicMessage_OrderCreated struct {
	OrderCreated *OrderCreated `protobuf:"bytes,1,opt,name=orderCreated,proto3,oneof"`
}

func (*TopicMessage_OrderCreated) isTopicMessage_Messages() {}

func (m *TopicMessage) GetMessages() isTopicMessage_Messages {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *TopicMessage) GetOrderCreated() *OrderCreated {
	if x, ok := m.GetMessages().(*TopicMessage_OrderCreated); ok {
		return x.OrderCreated
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TopicMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TopicMessage_OneofMarshaler, _TopicMessage_OneofUnmarshaler, _TopicMessage_OneofSizer, []interface{}{
		(*TopicMessage_OrderCreated)(nil),
	}
}

func _TopicMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TopicMessage)
	// messages
	switch x := m.Messages.(type) {
	case *TopicMessage_OrderCreated:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrderCreated); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TopicMessage.Messages has unexpected type %T", x)
	}
	return nil
}

func _TopicMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TopicMessage)
	switch tag {
	case 1: // messages.orderCreated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrderCreated)
		err := b.DecodeMessage(msg)
		m.Messages = &TopicMessage_OrderCreated{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TopicMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TopicMessage)
	// messages
	switch x := m.Messages.(type) {
	case *TopicMessage_OrderCreated:
		s := proto.Size(x.OrderCreated)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OrderCreated struct {
	OrderID              string   `protobuf:"bytes,3,opt,name=orderID,proto3" json:"orderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCreated) Reset()         { *m = OrderCreated{} }
func (m *OrderCreated) String() string { return proto.CompactTextString(m) }
func (*OrderCreated) ProtoMessage()    {}
func (*OrderCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_c81123ad544d5f66, []int{1}
}
func (m *OrderCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCreated.Unmarshal(m, b)
}
func (m *OrderCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCreated.Marshal(b, m, deterministic)
}
func (dst *OrderCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCreated.Merge(dst, src)
}
func (m *OrderCreated) XXX_Size() int {
	return xxx_messageInfo_OrderCreated.Size(m)
}
func (m *OrderCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCreated.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCreated proto.InternalMessageInfo

func (m *OrderCreated) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func init() {
	proto.RegisterType((*TopicMessage)(nil), "checkout.TopicMessage")
	proto.RegisterType((*OrderCreated)(nil), "checkout.OrderCreated")
}

func init() { proto.RegisterFile("topic.proto", fileDescriptor_topic_c81123ad544d5f66) }

var fileDescriptor_topic_c81123ad544d5f66 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xc9, 0x2f, 0xc8,
	0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0xce, 0x48, 0x4d, 0xce, 0xce, 0x2f,
	0x2d, 0x51, 0x8a, 0xe0, 0xe2, 0x09, 0x01, 0x49, 0xf8, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x0a,
	0xd9, 0x70, 0xf1, 0xe4, 0x17, 0xa5, 0xa4, 0x16, 0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0xa6, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe9, 0xc1, 0x34, 0xe8, 0xf9, 0x23, 0xc9, 0x7a, 0x30,
	0x04, 0xa1, 0xa8, 0x76, 0xe2, 0xe2, 0xe2, 0xc8, 0x85, 0x18, 0x54, 0xac, 0xa4, 0xc1, 0xc5, 0x83,
	0xac, 0x56, 0x48, 0x82, 0x8b, 0x1d, 0xac, 0xd6, 0xd3, 0x45, 0x82, 0x59, 0x81, 0x51, 0x83, 0x33,
	0x08, 0xc6, 0x4d, 0x62, 0x03, 0x3b, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xf1, 0x75,
	0xef, 0xa3, 0x00, 0x00, 0x00,
}
