// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package catalog

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CatalogRequest_Sorting int32

const (
	CatalogRequest_ID    CatalogRequest_Sorting = 0
	CatalogRequest_PRICE CatalogRequest_Sorting = 1
	CatalogRequest_NAME  CatalogRequest_Sorting = 2
)

var CatalogRequest_Sorting_name = map[int32]string{
	0: "ID",
	1: "PRICE",
	2: "NAME",
}

var CatalogRequest_Sorting_value = map[string]int32{
	"ID":    0,
	"PRICE": 1,
	"NAME":  2,
}

func (x CatalogRequest_Sorting) String() string {
	return proto.EnumName(CatalogRequest_Sorting_name, int32(x))
}

func (CatalogRequest_Sorting) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0, 0}
}

type CatalogRequest struct {
	Sorting              CatalogRequest_Sorting `protobuf:"varint,1,opt,name=sorting,proto3,enum=catalog.CatalogRequest_Sorting" json:"sorting,omitempty"`
	Prefix               string                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Page                 int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	ItemsPerPage         int64                  `protobuf:"varint,4,opt,name=itemsPerPage,proto3" json:"itemsPerPage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CatalogRequest) Reset()         { *m = CatalogRequest{} }
func (m *CatalogRequest) String() string { return proto.CompactTextString(m) }
func (*CatalogRequest) ProtoMessage()    {}
func (*CatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *CatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogRequest.Unmarshal(m, b)
}
func (m *CatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogRequest.Marshal(b, m, deterministic)
}
func (m *CatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogRequest.Merge(m, src)
}
func (m *CatalogRequest) XXX_Size() int {
	return xxx_messageInfo_CatalogRequest.Size(m)
}
func (m *CatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogRequest proto.InternalMessageInfo

func (m *CatalogRequest) GetSorting() CatalogRequest_Sorting {
	if m != nil {
		return m.Sorting
	}
	return CatalogRequest_ID
}

func (m *CatalogRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *CatalogRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *CatalogRequest) GetItemsPerPage() int64 {
	if m != nil {
		return m.ItemsPerPage
	}
	return 0
}

type CatalogResponse struct {
	Request              *CatalogRequest    `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Products             []*ProductResponse `protobuf:"bytes,9,rep,name=products,proto3" json:"products,omitempty"`
	TotalItems           int64              `protobuf:"varint,2,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
	TotalPages           int64              `protobuf:"varint,3,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CatalogResponse) Reset()         { *m = CatalogResponse{} }
func (m *CatalogResponse) String() string { return proto.CompactTextString(m) }
func (*CatalogResponse) ProtoMessage()    {}
func (*CatalogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *CatalogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogResponse.Unmarshal(m, b)
}
func (m *CatalogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogResponse.Marshal(b, m, deterministic)
}
func (m *CatalogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogResponse.Merge(m, src)
}
func (m *CatalogResponse) XXX_Size() int {
	return xxx_messageInfo_CatalogResponse.Size(m)
}
func (m *CatalogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogResponse proto.InternalMessageInfo

func (m *CatalogResponse) GetRequest() *CatalogRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CatalogResponse) GetProducts() []*ProductResponse {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *CatalogResponse) GetTotalItems() int64 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *CatalogResponse) GetTotalPages() int64 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

type ProductRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (m *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(m, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProductResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price                int64    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Longtext             string   `protobuf:"bytes,5,opt,name=longtext,proto3" json:"longtext,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	SmallImageURL        string   `protobuf:"bytes,7,opt,name=smallImageURL,proto3" json:"smallImageURL,omitempty"`
	LargeImageURL        string   `protobuf:"bytes,8,opt,name=largeImageURL,proto3" json:"largeImageURL,omitempty"`
	Disabled             bool     `protobuf:"varint,9,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (m *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(m, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProductResponse) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ProductResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProductResponse) GetLongtext() string {
	if m != nil {
		return m.Longtext
	}
	return ""
}

func (m *ProductResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ProductResponse) GetSmallImageURL() string {
	if m != nil {
		return m.SmallImageURL
	}
	return ""
}

func (m *ProductResponse) GetLargeImageURL() string {
	if m != nil {
		return m.LargeImageURL
	}
	return ""
}

func (m *ProductResponse) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func init() {
	proto.RegisterEnum("catalog.CatalogRequest_Sorting", CatalogRequest_Sorting_name, CatalogRequest_Sorting_value)
	proto.RegisterType((*CatalogRequest)(nil), "catalog.CatalogRequest")
	proto.RegisterType((*CatalogResponse)(nil), "catalog.CatalogResponse")
	proto.RegisterType((*ProductRequest)(nil), "catalog.ProductRequest")
	proto.RegisterType((*ProductResponse)(nil), "catalog.ProductResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x8e, 0xd3, 0x3e,
	0x10, 0xc7, 0x7f, 0x49, 0xff, 0x66, 0xba, 0xdb, 0x56, 0xa3, 0x1f, 0x6c, 0x54, 0x21, 0x88, 0x22,
	0x84, 0x72, 0x6a, 0x45, 0xe1, 0xc2, 0x11, 0x2d, 0x8b, 0x54, 0x09, 0x50, 0xe5, 0xd5, 0x9e, 0x38,
	0x79, 0x13, 0x63, 0x2c, 0xa5, 0x71, 0xb0, 0xbd, 0x68, 0xb9, 0x72, 0xe7, 0xc4, 0xdb, 0x70, 0x85,
	0x37, 0xe0, 0x15, 0x78, 0x10, 0x64, 0x3b, 0xcd, 0xb6, 0x45, 0xbd, 0x79, 0xe6, 0xfb, 0xc9, 0xd7,
	0x33, 0xe3, 0x09, 0x44, 0xb4, 0x16, 0xf3, 0x5a, 0x49, 0x23, 0x71, 0x90, 0x53, 0x43, 0x4b, 0xc9,
	0x67, 0x0f, 0xb8, 0x94, 0xbc, 0x64, 0x0b, 0x5a, 0x8b, 0x05, 0xad, 0x2a, 0x69, 0xa8, 0x11, 0xb2,
	0xd2, 0x1e, 0x4b, 0x7f, 0x06, 0x30, 0x3e, 0xf7, 0x24, 0x61, 0x9f, 0x6e, 0x98, 0x36, 0xf8, 0x02,
	0x06, 0x5a, 0x2a, 0x23, 0x2a, 0x1e, 0x07, 0x49, 0x90, 0x8d, 0x97, 0x8f, 0xe6, 0x8d, 0xd7, 0x7c,
	0x9f, 0x9c, 0x5f, 0x7a, 0x8c, 0x6c, 0x79, 0xbc, 0x0f, 0xfd, 0x5a, 0xb1, 0x0f, 0xe2, 0x36, 0x0e,
	0x93, 0x20, 0x8b, 0x48, 0x13, 0x21, 0x42, 0xb7, 0xa6, 0x9c, 0xc5, 0x9d, 0x24, 0xc8, 0x3a, 0xc4,
	0x9d, 0x31, 0x85, 0x13, 0x61, 0xd8, 0x46, 0xaf, 0x99, 0x5a, 0x5b, 0xad, 0xeb, 0xb4, 0xbd, 0x5c,
	0xfa, 0x04, 0x06, 0xcd, 0x1d, 0xd8, 0x87, 0x70, 0xf5, 0x6a, 0xfa, 0x1f, 0x46, 0xd0, 0x5b, 0x93,
	0xd5, 0xf9, 0xc5, 0x34, 0xc0, 0x21, 0x74, 0xdf, 0xbd, 0x7c, 0x7b, 0x31, 0x0d, 0xd3, 0x1f, 0x01,
	0x4c, 0xda, 0xda, 0x74, 0x2d, 0x2b, 0xcd, 0xf0, 0x29, 0x0c, 0x94, 0xaf, 0xd3, 0xb5, 0x31, 0x5a,
	0x9e, 0x1d, 0x69, 0x83, 0x6c, 0x39, 0x7c, 0x0e, 0xc3, 0x5a, 0xc9, 0xe2, 0x26, 0x37, 0x3a, 0x8e,
	0x92, 0x4e, 0x36, 0x5a, 0xc6, 0xed, 0x37, 0x6b, 0x2f, 0x6c, 0xed, 0x49, 0x4b, 0xe2, 0x43, 0x00,
	0x23, 0x0d, 0x2d, 0x57, 0xb6, 0x72, 0xd7, 0x78, 0x87, 0xec, 0x64, 0x5a, 0xdd, 0x76, 0xa4, 0x9b,
	0x11, 0xec, 0x64, 0xd2, 0x04, 0xc6, 0xad, 0xb9, 0xaf, 0x63, 0x0c, 0xa1, 0x28, 0x5c, 0xd5, 0x11,
	0x09, 0x45, 0x91, 0x7e, 0x0b, 0x61, 0x72, 0x70, 0xff, 0x21, 0x83, 0xff, 0x43, 0xaf, 0x56, 0x22,
	0x67, 0x4d, 0x01, 0x3e, 0xb0, 0x83, 0xaf, 0xe8, 0xc6, 0x0f, 0x3e, 0x22, 0xee, 0x8c, 0x09, 0x8c,
	0x0a, 0xa6, 0x73, 0x25, 0x6a, 0xbb, 0x08, 0x6e, 0xee, 0x11, 0xd9, 0x4d, 0xe1, 0x0c, 0x86, 0xa5,
	0xac, 0xb8, 0x61, 0xb7, 0x26, 0xee, 0x39, 0xb9, 0x8d, 0xad, 0x96, 0x53, 0xc3, 0xb8, 0x54, 0x5f,
	0xe2, 0xbe, 0xd7, 0xb6, 0x31, 0x3e, 0x86, 0x53, 0xbd, 0xa1, 0x65, 0xb9, 0xda, 0x50, 0xce, 0xae,
	0xc8, 0x9b, 0x78, 0xe0, 0x80, 0xfd, 0xa4, 0xa5, 0x4a, 0xaa, 0x38, 0x6b, 0xa9, 0xa1, 0xa7, 0xf6,
	0x92, 0xf6, 0x9e, 0x42, 0x68, 0x7a, 0x5d, 0xb2, 0x22, 0x8e, 0x92, 0x20, 0x1b, 0x92, 0x36, 0x5e,
	0xfe, 0xba, 0x5b, 0xda, 0x4b, 0xa6, 0x3e, 0xdb, 0x46, 0xdf, 0xc3, 0xc9, 0x6b, 0x66, 0xf2, 0x8f,
	0xcd, 0x98, 0xf0, 0xec, 0xdf, 0x87, 0x73, 0xb3, 0x9d, 0x1d, 0x7d, 0xd1, 0x34, 0xfe, 0xfa, 0xfb,
	0xcf, 0xf7, 0x10, 0x71, 0xba, 0x68, 0x88, 0x45, 0xf3, 0xc4, 0x78, 0x05, 0x91, 0x37, 0xb7, 0x7b,
	0x7b, 0x6c, 0x8d, 0x76, 0x9c, 0x0f, 0x56, 0x31, 0xbd, 0xe7, 0x9c, 0x27, 0x78, 0x7a, 0xe7, 0x4c,
	0x39, 0xbb, 0xee, 0xbb, 0x5f, 0xf0, 0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0xe2, 0x55,
	0xfa, 0xb6, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CatalogServiceClient is the client API for CatalogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CatalogServiceClient interface {
	FetchProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error)
	FetchPage(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error)
}

type catalogServiceClient struct {
	cc *grpc.ClientConn
}

func NewCatalogServiceClient(cc *grpc.ClientConn) CatalogServiceClient {
	return &catalogServiceClient{cc}
}

func (c *catalogServiceClient) FetchProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/catalog.CatalogService/FetchProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) FetchPage(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error) {
	out := new(CatalogResponse)
	err := c.cc.Invoke(ctx, "/catalog.CatalogService/FetchPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CatalogServiceServer is the server API for CatalogService service.
type CatalogServiceServer interface {
	FetchProduct(context.Context, *ProductRequest) (*ProductResponse, error)
	FetchPage(context.Context, *CatalogRequest) (*CatalogResponse, error)
}

// UnimplementedCatalogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCatalogServiceServer struct {
}

func (*UnimplementedCatalogServiceServer) FetchProduct(ctx context.Context, req *ProductRequest) (*ProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchProduct not implemented")
}
func (*UnimplementedCatalogServiceServer) FetchPage(ctx context.Context, req *CatalogRequest) (*CatalogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchPage not implemented")
}

func RegisterCatalogServiceServer(s *grpc.Server, srv CatalogServiceServer) {
	s.RegisterService(&_CatalogService_serviceDesc, srv)
}

func _CatalogService_FetchProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).FetchProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalog.CatalogService/FetchProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).FetchProduct(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_FetchPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).FetchPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalog.CatalogService/FetchPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).FetchPage(ctx, req.(*CatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CatalogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "catalog.CatalogService",
	HandlerType: (*CatalogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchProduct",
			Handler:    _CatalogService_FetchProduct_Handler,
		},
		{
			MethodName: "FetchPage",
			Handler:    _CatalogService_FetchPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
