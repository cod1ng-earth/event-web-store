version: '3.7'

services:

  zookeeper:
    cap_drop: [ALL]
    networks:
      - default
      - sandbox
    read_only: true
    security_opt: ['no-new-privileges:true']
    build:
      args:
        - ZOOKEEPER_IMAGE=bitnami/zookeeper:3.5.5-r62
      context: docker/zookeeper
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    user: '65535'

  kafka:
    cap_drop: [ALL]
    networks:
      - default
      - sandbox
    read_only: true
    security_opt: ['no-new-privileges']
    build:
      args:
        - KAFKA_IMAGE=bitnami/kafka:2.3.0-r35
      context: docker/kafka
    volumes:
      - 'kafka_data:/bitnami'
    environment:
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - '9092:9092'
    user: '65535'

  backend:
    cap_drop: [ALL]
    networks:
      - default
      - sandbox
    build:
      context: backend
      dockerfile: ../docker/backend/Dockerfile
    environment: 
      - BROKER_LIST=kafka:9092
    ports:
      - '8080:8080'
    read_only: true
    restart: unless-stopped
    volumes:
      - ./backend/cmd:/go/src/app/cmd:ro,cached
      - ./backend/pkg:/go/src/app/pkg:ro,cached
      - ./backend/air.conf:/go/src/app/air.conf:ro,cached
      - ./backend/go.mod:/go/src/app/go.mod:ro,cached
      - ./backend/go.sum:/go/src/app/go.sum:ro,cached
      - ./backend/Makefile:/go/src/app/Makefile:ro,cached
    #user: '65535'

  frontend:
    cap_drop: [ALL]
    networks:
      - default
      - sandbox
    build:
      context: frontend
      dockerfile: ../docker/frontend/Dockerfile
    ports:
      - '8000:8000'
    read_only: true
    volumes:
      - ./frontend/dist:/app/dist:rw,cached
      - ./frontend/src:/app/src:ro,cached
      - ./frontend/elm.json:/app/elm.json:ro,cached
      - ./frontend/Makefile:/app/Makefile:ro,cached
    #user: '65535'

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  default:
    internal: false
  sandbox:
    internal: true
